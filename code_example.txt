theme mainTheme:
	fontcolor "red"
		fontsize "8"
		backgroundcolor "white"

def returnControllerAIAndPlayer():
	interface Controller:
		function "generateMove(Map map)"
	class PlayerController:
		public function "generateMove(Map map)"
	class AIController:
		public function "generateMove(Map map)"
	for c in [AIController, PlayerController]:
		c implement Controller

	return [Controller, AIController, PlayerController]

diagclass main:
	class mainTheme ListElement:
		private "int value"
		private "ListElement*next"
		private "ListElement*previous"
		public "void ListElement(int value)" 
	abstract mainTheme List:
		protected "ListElement*head"
		public function "add(int value)"
		public function "remove(int value)"
		public function "removeAt(int index)"

	interface mainTheme ListGenerator:
		function "List generateRandom()"
		function "List generateFill(int fill)"
	class mainTheme ArrayList:
		public function "add(int value)"
		public function "remove(int value)"
		public function "removeAt(int index)"
	class mainTheme LinkedList:
		public function "add(int value)"
		public function "remove(int value)"
		public function "removeAt(int index)"

	for i in [ArrayList, LinkedList]:
		i inherit List

	List implement ListGenerator labeled "Implementacja"
	List associate ListElement

	result returnControllerAIAndPlayer()
	for r in result:
		List <-// r

	for r in returnControllerAIAndPlayer():
		ListElement compose r

	exec main all "result.png"
	exec main brief result[0] "controller.jpg"

package p1:
	main.ListElement
	main.List
	main.ListGenerator

exec p1

exec main brief [main.ListElement, List]