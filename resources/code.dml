def fun(arg):
    class G:
        private "asedasd()"
    arg -> G

    return arg, G

class A:
    private "void print()"

diagclass test:
    exec
    class C:
        protected "C()"

    class A:
        private "AsdasD()"

    MALIK_MONTANA, GLOBAL_CLASS = fun(global&A)

    class D:
        protected "D()"

    C inherit D
    D aggregate C

    class G:
        public "asdG()"

    class H:
        public "asdH()"

    H5 = fun11(A)

    G1, H1 = fun10($C, $D)
    G2, H2 = fun10(C, D)
    G3, H3 = fun10(C, D)

def fun10(arg1, arg2):
    arg1 depend arg2
    return arg1, arg2

def fun11(arg1):
    return arg1

def fun1():
    class M1B:
        private "void print12454231236346()"
    class M2:
        public "void helloWorld()"

    M1B compose M2
    return M1B, M2

def fun2():
    class M3:
        private "void print()"
    class M4:
        public "void helloWorld()"

    return M4, M3
